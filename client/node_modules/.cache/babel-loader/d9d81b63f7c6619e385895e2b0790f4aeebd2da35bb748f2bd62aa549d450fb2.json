{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eya\\\\OneDrive\\\\Bureau\\\\documentation\\\\crudapi\\\\client\\\\src\\\\context\\\\GlobalWrapper.js\";\nimport { createContext, useState } from 'react';\nimport axios from 'axios';\nimport { useDisclosure, useToast } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext();\nexport default function Wrapper(_ref) {\n  let {\n    children\n  } = _ref;\n  const FetchUsers = () => {\n    axios.get('/api/users').then(res => {\n      setUsers(res.data);\n    }).catch(err => {\n      console.log(err.reponse.data);\n    });\n  };\n  const Search = query => {\n    axios.post(`/api/users/search?key=${query}`).then(res => {\n      setUsers(res.data);\n    }).catch(err => {\n      console.log(err.reponse.data);\n    });\n  };\n  const Delete = id => {\n    axios.delete(`/api/users/${id}`).then(res => {\n      setUsers(users.filter(u => u._id != id));\n      toast({\n        title: 'User Deleted',\n        status: 'success',\n        duration: 4000,\n        isClosable: true\n      });\n    }).catch(err => {\n      console.log(err.reponse.data);\n    });\n  };\n  const Add = (form, setForm) => {\n    axios.post('/api/users', form).then(res => {\n      setUsers([...users, res.data]);\n      toast({\n        title: 'User Added',\n        status: 'success',\n        duration: 4000,\n        isClosable: true\n      });\n      setErrors({});\n      setForm({});\n      onClose();\n    }).catch(err => {\n      setErrors(err.response.data.error);\n    });\n  };\n  const FindOne = async id => {\n    await axios.get(`/api/users/${id}`).then(res => {\n      setUser(res.data);\n    }).catch(err => {\n      setErrors(err.response.data.error);\n    });\n  };\n  const Update = (form, setForm, id) => {\n    axios.put(`/api/users/${id}`, form).then(res => {\n      toast({\n        title: 'User Updated',\n        status: 'success',\n        duration: 4000,\n        isClosable: true\n      });\n      setErrors({});\n      setForm({});\n      onClose();\n      FetchUsers();\n    }).catch(err => {\n      setErrors(err.response.data.error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 12\n  }, this);\n}\n_c = Wrapper;\nvar _c;\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"names":["createContext","useState","axios","useDisclosure","useToast","GlobalContext","Wrapper","children","FetchUsers","get","then","res","setUsers","data","catch","err","console","log","reponse","Search","query","post","Delete","id","delete","users","filter","u","_id","toast","title","status","duration","isClosable","Add","form","setForm","setErrors","onClose","response","error","FindOne","setUser","Update","put"],"sources":["C:/Users/Eya/OneDrive/Bureau/documentation/crudapi/client/src/context/GlobalWrapper.js"],"sourcesContent":["import { createContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDisclosure, useToast } from '@chakra-ui/react';\r\n\r\n\r\nexport const GlobalContext=createContext();\r\n\r\n\r\nexport default function Wrapper({children}){\r\n    const FetchUsers = () => {\r\n        axios .get('/api/users').then((res) => { setUsers(res.data);}).catch((err) => {\r\n            console.log(err.reponse.data);\r\n          });\r\n      }\r\n      \r\n  const Search = (query) => {\r\n    axios\r\n      .post(`/api/users/search?key=${query}`)\r\n      .then((res) => {\r\n        setUsers(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.reponse.data);\r\n      });\r\n  };\r\n\r\n  const Delete = (id) => {\r\n    axios\r\n      .delete(`/api/users/${id}`)\r\n      .then((res) => {\r\n        setUsers(users.filter((u) => u._id != id));\r\n        toast({\r\n          title: 'User Deleted',\r\n          status: 'success',\r\n          duration: 4000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.reponse.data);\r\n      });\r\n  };\r\n\r\n  const Add = (form, setForm) => {\r\n    axios\r\n      .post('/api/users', form)\r\n      .then((res) => {\r\n        setUsers([...users, res.data]);\r\n        toast({\r\n          title: 'User Added',\r\n          status: 'success',\r\n          duration: 4000,\r\n          isClosable: true,\r\n        });\r\n        setErrors({});\r\n        setForm({});\r\n        onClose();\r\n      })\r\n      .catch((err) => {\r\n        setErrors(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  const FindOne = async (id) => {\r\n    await axios\r\n      .get(`/api/users/${id}`)\r\n      .then((res) => {\r\n        setUser(res.data);\r\n      })\r\n      .catch((err) => {\r\n        setErrors(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  const Update = (form, setForm, id) => {\r\n    axios\r\n      .put(`/api/users/${id}`, form)\r\n      .then((res) => {\r\n        toast({\r\n          title: 'User Updated',\r\n          status: 'success',\r\n          duration: 4000,\r\n          isClosable: true,\r\n        });\r\n        setErrors({});\r\n        setForm({});\r\n        onClose();\r\n        FetchUsers();\r\n      })\r\n      .catch((err) => {\r\n        setErrors(err.response.data.error);\r\n      });\r\n  };\r\n    return <GlobalContext.Provider>\r\n{children}\r\n    </GlobalContext.Provider>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}