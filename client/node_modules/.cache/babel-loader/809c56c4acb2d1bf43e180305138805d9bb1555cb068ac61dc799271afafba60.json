{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eya\\\\OneDrive\\\\Bureau\\\\documentation\\\\crudapi\\\\client\\\\src\\\\components\\\\InputsGroup.js\";\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react';\nimport { GlobalContext } from '../context/GlobalWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputsGroup = _ref => {\n  let {\n    name,\n    onChangeHandler,\n    value,\n    errors\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: errors,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      name: name,\n      onChange: onChangeHandler,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), errors && (errors === null || errors === void 0 ? void 0 : errors.map(err => {\n      return /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }, this);\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = InputsGroup;\nexport default InputsGroup;\nvar _c;\n$RefreshReg$(_c, \"InputsGroup\");","map":{"version":3,"names":["FormControl","FormErrorMessage","FormLabel","Input","GlobalContext","InputsGroup","name","onChangeHandler","value","errors","map","err"],"sources":["C:/Users/Eya/OneDrive/Bureau/documentation/crudapi/client/src/components/InputsGroup.js"],"sourcesContent":["\r\nimport {\r\n    FormControl,\r\n    FormErrorMessage,\r\n    FormLabel,\r\n    Input,\r\n  } from '@chakra-ui/react';\r\nimport { GlobalContext } from '../context/GlobalWrapper';\r\nconst InputsGroup = ({ name, onChangeHandler, value, errors }) => {\r\n    \r\n      return (\r\n    <FormControl isInvalid={errors}>\r\n    <FormLabel>{name}</FormLabel>\r\n    <Input type=\"text\" name={name} onChange={onChangeHandler} value={value} />\r\n    {errors &&\r\n      errors?.map((err) => {\r\n        return <FormErrorMessage>{err}</FormErrorMessage>;\r\n      })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport default InputsGroup\r\n"],"mappings":";AACA,SACIA,WAAW,EACXC,gBAAgB,EAChBC,SAAS,EACTC,KAAK,QACA,kBAAkB;AAC3B,SAASC,aAAa,QAAQ,0BAA0B;AAAC;AACzD,MAAMC,WAAW,GAAG,QAA8C;EAAA,IAA7C;IAAEC,IAAI;IAAEC,eAAe;IAAEC,KAAK;IAAEC;EAAO,CAAC;EAEvD,oBACF,QAAC,WAAW;IAAC,SAAS,EAAEA,MAAO;IAAA,wBAC/B,QAAC,SAAS;MAAA,UAAEH;IAAI;MAAA;MAAA;MAAA;IAAA,QAAa,eAC7B,QAAC,KAAK;MAAC,IAAI,EAAC,MAAM;MAAC,IAAI,EAAEA,IAAK;MAAC,QAAQ,EAAEC,eAAgB;MAAC,KAAK,EAAEC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,EACzEC,MAAM,KACLA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,GAAG,CAAEC,GAAG,IAAK;MACnB,oBAAO,QAAC,gBAAgB;QAAA,UAAEA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAoB;IACnD,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACQ;AAEhB,CAAC;AAAA,KAZKN,WAAW;AAcjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}